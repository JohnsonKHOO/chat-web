<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.a2208.chat.dao.FriendMapper">
    <resultMap id="BaseResultMap" type="com.a2208.chat.entity.Friend">
        <result column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="friend_id" property="friendId" />
        <result column="f_name" property="name" />
        <association property="user" javaType="com.a2208.chat.entity.User">
            <result column="friend_id" property="id"/>
            <result column="account" property="account"/>
            <result column="nickname" property="nickname"/>
            <result column="birthday" property="birthday"/>
            <result column="age" property="age"/>
            <result column="sex" property="sex"/>
            <result column="signature" property="signature"/>
            <result column="avatar" property="avatar"/>
        </association>
    </resultMap>

    <!-- 表字段 -->
    <sql id="baseColumns">
        id
        , user_id
        , friend_id
        , f_name
    </sql>

    <!-- 查询全部 -->
    <select id="listAll" resultMap="BaseResultMap">
        SELECT
        *
        FROM chat_db.friend f, chat_db.user u
        WHERE f.friend_id = u.id
    </select>


    <!-- 根据user_id获取记录 -->
    <select id="getByUserId" resultMap="BaseResultMap">
        SELECT
        *
        FROM chat_db.friend f, chat_db.user u
        WHERE f.user_id = #{userId}
        AND (inStr(u.account, #{account})
                 OR inStr(u.nickname, #{account})
                 OR inStr(f.f_name, #{account}))
        AND f.friend_id = u.id
    </select>

    <!-- 根据user_id与friend_id获取记录 -->
    <select id="getByBoth" resultMap="BaseResultMap">
        SELECT
        <include refid="baseColumns" />
        FROM chat_db.friend
        WHERE user_id = #{userId}
        AND friend_id = #{friendId}
    </select>

    <!-- 根据id获取记录 -->
    <select id="getById" resultMap="BaseResultMap" parameterType="Long">
        SELECT
        <include refid="baseColumns" />
        FROM chat_db.friend
        WHERE id = #{id}
    </select>
<!--    查询两个用户是否已经为好友-->
    <select id="isExist" resultMap="BaseResultMap" parameterType="com.a2208.chat.entity.Friend">
        SELECT
        <include refid="baseColumns" />
        FROM chat_db.friend
        WHERE user_id = #{userId}
        AND friend_id = #{friendId}
    </select>

    <!-- 插入全部字段 -->
    <insert id="insert" parameterType="com.a2208.chat.entity.Friend"
            keyProperty="id" keyColumn="id" useGeneratedKeys="true"
    >
        INSERT INTO chat_db.friend
        <trim prefix="(" suffix=")" suffixOverrides=",">
            user_id,
            friend_id,
            f_name,
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            #{userId},
            #{friendId},
            #{name},
        </trim>
    </insert>

    <!-- 更新好友备注 -->
    <update id="update" parameterType="com.a2208.chat.entity.Friend">
        UPDATE chat_db.friend
        <set>
            f_name=#{name}
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据用户id与好友id删除,方便双向删除 -->
    <delete id="delete" parameterType="com.a2208.chat.entity.Friend">
        DELETE
        FROM chat_db.friend
        WHERE user_id = #{userId}
        AND friend_id = #{friendId}
    </delete>


</mapper>